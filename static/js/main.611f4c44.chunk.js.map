{"version":3,"sources":["api/users.ts","components/AddTodoForm/AddTodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","AddTodoForm","users","onAdd","useState","title","setTitle","hasTitleError","setHasTitleError","userId","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","className","htmlFor","type","placeholder","value","onChange","filteredTitle","target","replace","disabled","map","user","UserInfo","href","TodoInfo","todo","cn","completed","TodoList","todos","getUserById","usersFromServer","find","getNewTodoId","Math","max","preparedTodos","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.611f4c44.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { User } from '../../type/User';\n\ninterface Props {\n  users: User[];\n  onAdd: (title: string, userId: number) => void;\n}\n\nexport const AddTodoForm: React.FC<Props> = ({ users, onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const filteredTitle = event.target.value\n      .replace(/[^a-zA-Z0-9\\s\\u0400-\\u04FF]/g, '');\n\n    setTitle(filteredTitle);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAdd(title, userId);\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">\n          Title:&nbsp;\n        </label>\n\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          name=\"title\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <label htmlFor=\"userSelect\">\n        User:&nbsp;\n      </label>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          name=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {users.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../type/User';\n\ninterface Props {\n  user: User | null;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './type/Todo';\nimport { User } from './type/User';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n\n  const addTodo = (title: string, userId: number) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <AddTodoForm users={usersFromServer} onAdd={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}